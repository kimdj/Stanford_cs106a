Stanford_cs106a
lecture_2

----method: set of instructions

----move, pickBeeper, turnLeft, turnRight, putBeeper

----algorithm: recipe for doing something

----valid Karel cmd example: move();

----run method..

	public void run() {
		move();
		pickBeeper();
		move();
		turnLeft();
		move();
		turnLeft();
		turnLeft();
		turnLeft();
		move();
		putBeeper();
		move();
	}

----Karel IS a defined class in Java

----Creating our OWN class:

	import stanford.karel.*;

	public class ourKarelProgram extends Karel {
		public void run() {
			move();
			pickBeeper();
			move();
			turnLeft();
			move();
			turnRight();
			/*turnLeft();
			turnLeft();
			turnLeft();*/
			move();
			putBeeper();
			move();
		}

		private void turnRight() {
			turnLeft();
			turnLeft();
			turnLeft();
		}

		private void turnAround() {
			turnLeft();
			turnLeft();
		}
	}

----for loop:

	for (int i=0; i<3; i++) {
		//body of instructions
		turnLeft();
	}

----while loop:

	while (frontIsClear()) {
		move();
	}

----if loop:

	if (beepersPresent()) {
		pickBeeper();
	} else {
		putBeeper();
	}

----The power to define methods unlocks the most important strategy
    in programmingâ€”the process of breaking a large problem down
    into smaller pieces that are easier to solve.

	import stanford.karel.*;

	public class myKarel extends SuperKarel {
		public void run() {
			//body
		}

		private void myMethod() {
			//body of method definition
		}
	}







